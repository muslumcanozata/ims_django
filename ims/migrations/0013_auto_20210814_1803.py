# Generated by Django 2.1.15 on 2021-08-14 15:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ims', '0012_remove_sarfkullanicilarm_password'),
    ]

    operations = [
        migrations.CreateModel(
            name='budgetCodeM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Bütçe Kodu')),
                ('directorate', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Müdürlük')),
                ('euro', models.FloatField(verbose_name='Euro')),
                ('ds', models.CharField(blank=True, max_length=255, verbose_name='Tanım')),
            ],
            options={
                'verbose_name': 'Bütçe Kodu',
                'verbose_name_plural': 'Bütçe Kodları',
                'db_table': 'budgetCodeM',
            },
        ),
        migrations.CreateModel(
            name='directorateM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directorate', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Müdürlük No')),
                ('d_name', models.CharField(max_length=255, unique=True, verbose_name='Müdürlük İsmi')),
            ],
            options={
                'verbose_name': 'Müdürlük',
                'verbose_name_plural': 'Müdürlükler',
                'db_table': 'directorateM',
            },
        ),
        migrations.CreateModel(
            name='employeeM',
            fields=[
                ('isno', models.IntegerField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(10000)], verbose_name='İş Numarası')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Adresi')),
                ('name', models.CharField(max_length=45, verbose_name='İsim')),
                ('surname', models.CharField(max_length=45, verbose_name='Soyisim')),
                ('tel', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(5999999999), django.core.validators.MinValueValidator(5000000000)], verbose_name='Telefon Numarası')),
                ('rfid', models.CharField(max_length=12, null=True, verbose_name='RFID')),
                ('directorate', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Müdürlük')),
                ('manager', models.CharField(max_length=45, verbose_name='İlk Amirlik')),
                ('gender', models.CharField(choices=[('E', 'Erkek'), ('K', 'Kadın')], max_length=1)),
                ('rationGroup', models.IntegerField(null=True, verbose_name='İstihkak Grubu')),
                ('ds', models.CharField(blank=True, max_length=255, null=True, verbose_name='Not')),
            ],
            options={
                'verbose_name': 'Personel',
                'verbose_name_plural': 'Personeller',
                'db_table': 'employeeM',
            },
        ),
        migrations.CreateModel(
            name='givenProductM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given', models.FloatField(verbose_name='Verilen Adet')),
                ('desired', models.FloatField(verbose_name='İstenilen Adet')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('emp_isno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.employeeM')),
            ],
            options={
                'verbose_name': 'Ürün Hareketi',
                'verbose_name_plural': 'Ürün Hareketleri',
                'db_table': 'givenProductM',
            },
        ),
        migrations.CreateModel(
            name='pendingProductM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired', models.FloatField(verbose_name='İstenilen Adet')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('emp_isno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.employeeM')),
            ],
            options={
                'verbose_name': 'Bekleyen Ürün',
                'verbose_name_plural': 'Bekleyen Ürünler',
                'db_table': 'pendingProductM',
            },
        ),
        migrations.CreateModel(
            name='productGroupM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Ürün İsmi')),
                ('group', models.IntegerField(blank=True, verbose_name='İstihkak Grubu')),
                ('piece', models.FloatField(null=True, verbose_name='Alınabilecek Adet')),
                ('directorate', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Müdürlük No')),
                ('frequency', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(365), django.core.validators.MinValueValidator(1)], verbose_name='Frekans')),
                ('isRation', models.BooleanField(default=False, verbose_name='İstihkak Ürünü')),
                ('ds', models.CharField(blank=True, max_length=255, null=True, verbose_name='Not')),
            ],
            options={
                'verbose_name': 'ÜrünlerGrup Bilgisi',
                'verbose_name_plural': 'ÜrünlerGrup Bilgileri',
                'db_table': 'productGroupM',
            },
        ),
        migrations.CreateModel(
            name='rationGroupM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.IntegerField(unique=True, verbose_name='SKU')),
                ('group', models.IntegerField(verbose_name='İstihkak Grubu')),
                ('productGroup', models.CharField(max_length=45, null=True, verbose_name='Ürün Grubu')),
                ('size', models.CharField(max_length=45, verbose_name='Beden')),
                ('frequency', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(365), django.core.validators.MinValueValidator(1)], verbose_name='Frekans')),
                ('directorate', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Müdürlük No')),
                ('gender', models.CharField(choices=[('E', 'Erkek'), ('K', 'Kadın')], max_length=1)),
                ('ds', models.CharField(blank=True, max_length=255, null=True, verbose_name='Not')),
            ],
            options={
                'verbose_name': 'İstihkak Grubu',
                'verbose_name_plural': 'İstihkak Grupları',
                'db_table': 'rationGroupM',
            },
        ),
        migrations.CreateModel(
            name='sizeM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.IntegerField(verbose_name='İstihkak Grubu')),
                ('size', models.CharField(max_length=45, verbose_name='Beden')),
                ('ds', models.CharField(blank=True, max_length=255, verbose_name='Not')),
                ('isno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.employeeM')),
            ],
            options={
                'verbose_name': 'Beden',
                'verbose_name_plural': 'Bedenler',
                'db_table': 'sizeM',
            },
        ),
        migrations.CreateModel(
            name='userM',
            fields=[
                ('isno', models.IntegerField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(10000)], verbose_name='İş Numarası')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Adresi')),
                ('name', models.CharField(max_length=45, verbose_name='İsim')),
                ('surname', models.CharField(max_length=45, verbose_name='Soyisim')),
                ('tel', models.CharField(max_length=10, unique=True, verbose_name='Telefon (5012345678)')),
                ('ds', models.CharField(blank=True, max_length=255, verbose_name='Not')),
            ],
            options={
                'verbose_name': 'Sarf Kullanıcı',
                'verbose_name_plural': 'Sarf Kullanıcılar',
                'db_table': 'userM',
            },
        ),
        migrations.RenameModel(
            old_name='fiyatM',
            new_name='priceM',
        ),
        migrations.RenameModel(
            old_name='istihkakM',
            new_name='rationM',
        ),
        migrations.RemoveField(
            model_name='bedenlerm',
            name='isno',
        ),
        migrations.DeleteModel(
            name='butceKoduM',
        ),
        migrations.DeleteModel(
            name='istihkaklarGrupM',
        ),
        migrations.DeleteModel(
            name='mudurlukM',
        ),
        migrations.RemoveField(
            model_name='urunhareketlerm',
            name='kull_isno',
        ),
        migrations.RemoveField(
            model_name='urunhareketlerm',
            name='per_isno',
        ),
        migrations.RemoveField(
            model_name='urunhareketlerm',
            name='urun_id',
        ),
        migrations.RenameField(
            model_name='rationm',
            old_name='grup',
            new_name='group',
        ),
        migrations.RenameField(
            model_name='rationm',
            old_name='i_isim',
            new_name='r_name',
        ),
        migrations.AlterModelTable(
            name='pricem',
            table='priceM',
        ),
        migrations.AlterModelTable(
            name='rationm',
            table='rationM',
        ),
        migrations.AlterModelTable(
            name='skum',
            table='skuM',
        ),
        migrations.DeleteModel(
            name='bedenlerM',
        ),
        migrations.DeleteModel(
            name='personellerM',
        ),
        migrations.DeleteModel(
            name='sarfKullanicilarM',
        ),
        migrations.DeleteModel(
            name='urunHareketlerM',
        ),
        migrations.DeleteModel(
            name='urunlerGrupM',
        ),
        migrations.AddField(
            model_name='pendingproductm',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.productGroupM'),
        ),
        migrations.AddField(
            model_name='pendingproductm',
            name='user_isno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.userM'),
        ),
        migrations.AddField(
            model_name='givenproductm',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.productGroupM'),
        ),
        migrations.AddField(
            model_name='givenproductm',
            name='user_isno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ims.userM'),
        ),
    ]
